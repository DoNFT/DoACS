version: "3.9"
services:
  nginx_cert:
    image: nginxproxy/nginx-proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/nginx/certs
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./infra/conf.d:/etc/nginx/conf.d
  acme:
    image: nginxproxy/acme-companion
    restart: always
    volumes_from:
      - nginx_cert
    volumes:
      - /etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
  do-acs:
    build: ./frontend/
    ports:
      - 80:80
    environment:
      - PUBLIC_HOST=$DO_ACS_URL
      - VIRTUAL_HOST=$DO_ACS_URL
      - LETSENCRYPT_HOST=$DO_ACS_URL
      - VUE_APP_API_TIMEOUT=200
      - VUE_APP_NETWORK_FILECOIN_HYPERSPACE_TEST_SUPPORT=1
      - VUE_APP_IPNS_ENDPOINT=$IPFS_PURE_URL/api/ipfs
      - VUE_APP_IPNS_ATTEMPTS=10
      - VUE_APP_IPFS_MAX_SIZE=5
    depends_on:
      - ipfs-pure
  ipfs-pure:
    extends:
      file: ./backend/ipfs-pure-service.yaml
      service: donft_ipfs_pure
    environment:
      - PUBLIC_HOST=$IPFS_PURE_URL
      - VIRTUAL_HOST=$IPFS_PURE_URL
      - LETSENCRYPT_HOST=$IPFS_PURE_URL
      - PASSWORD=$PASSWORD
    depends_on:
      - ipfs-node
  ipfs-node:
    container_name: ipfs-node
    image: ipfs/go-ipfs:latest
    ports:
      - 4001:4001 # ipfs swarm - expose if needed/wanted
      - 5001:5001 # ipfs api - expose if needed/wanted
      - 8080:8080 # ipfs gateway - expose if needed/wanted
    volumes:
      - ./data/ipfs:/data/ipfs
      - ./data/ipfs-staging:/staging
  
